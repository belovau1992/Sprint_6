{"name": "Тест успешного оформления заказа", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementNotInteractableException: Message: Element <button class=\"Button_Button__ra12g\"> could not be scrolled into view\nStacktrace:\nRemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nWebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:199:5\nElementNotInteractableError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:368:5\nwebdriverClickElement@chrome://remote/content/marionette/interaction.sys.mjs:167:11\ninteraction.clickElement@chrome://remote/content/marionette/interaction.sys.mjs:136:11\nclickElement@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:354:29\nreceiveMessage@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:230:31", "trace": "self = <Sprint_6.tests.test_successful_order_window.TestSuccessfulOrderWindow object at 0x0000023A970CD810>\ndriver = <selenium.webdriver.firefox.webdriver.WebDriver (session=\"781138b0-afb8-4252-b63b-c1ed720a1e5b\")>\n\n    @allure.title(\"Тест успешного оформления заказа\")\n    def test_successful_order(self,driver):\n        # Arrange\n        order_form_page = OrderForm(driver)\n        credentials = CredentialsOne()\n        # Act\n>       order_form_page.click_on_button_order_up()\n\ntests\\test_successful_order_window.py:14: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages\\order_form_page.py:12: in click_on_button_order_up\n    self.click_on_element(MainPageLocators.UP_BUTTON_ORDER)\npages\\base_page.py:23: in click_on_element\n    element.click()\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:119: in click\n    self._execute(Command.CLICK_ELEMENT)\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:572: in _execute\n    return self._parent.execute(command, params)\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:448: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x0000023A970D9D30>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element not interactable\",\"message\":\"Element <button class=\\\\\"Button_Butt...ys.mjs:354:29\\\\nreceiveMessage@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:230:31\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementNotInteractableException: Message: Element <button class=\"Button_Button__ra12g\"> could not be scrolled into view\nE       Stacktrace:\nE       RemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nE       WebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:199:5\nE       ElementNotInteractableError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:368:5\nE       webdriverClickElement@chrome://remote/content/marionette/interaction.sys.mjs:167:11\nE       interaction.clickElement@chrome://remote/content/marionette/interaction.sys.mjs:136:11\nE       clickElement@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:354:29\nE       receiveMessage@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:230:31\n\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:232: ElementNotInteractableException"}, "steps": [{"name": "Кликнуть на верхнюю кнопку Заказать", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementNotInteractableException: Message: Element <button class=\"Button_Button__ra12g\"> could not be scrolled into view\nStacktrace:\nRemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nWebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:199:5\nElementNotInteractableError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:368:5\nwebdriverClickElement@chrome://remote/content/marionette/interaction.sys.mjs:167:11\ninteraction.clickElement@chrome://remote/content/marionette/interaction.sys.mjs:136:11\nclickElement@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:354:29\nreceiveMessage@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:230:31\n\n", "trace": "  File \"C:\\Users\\belov\\PycharmProjects\\Sprint_6\\.venv\\Lib\\site-packages\\allure_commons\\_allure.py\", line 202, in impl\n    return func(*a, **kw)\n  File \"C:\\Users\\belov\\PycharmProjects\\Sprint_6\\pages\\order_form_page.py\", line 12, in click_on_button_order_up\n    self.click_on_element(MainPageLocators.UP_BUTTON_ORDER)\n    ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\belov\\PycharmProjects\\Sprint_6\\.venv\\Lib\\site-packages\\allure_commons\\_allure.py\", line 202, in impl\n    return func(*a, **kw)\n  File \"C:\\Users\\belov\\PycharmProjects\\Sprint_6\\pages\\base_page.py\", line 23, in click_on_element\n    element.click()\n    ~~~~~~~~~~~~~^^\n  File \"C:\\Users\\belov\\PycharmProjects\\Sprint_6\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 119, in click\n    self._execute(Command.CLICK_ELEMENT)\n    ~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\belov\\PycharmProjects\\Sprint_6\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 572, in _execute\n    return self._parent.execute(command, params)\n           ~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\belov\\PycharmProjects\\Sprint_6\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 448, in execute\n    self.error_handler.check_response(response)\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^\n  File \"C:\\Users\\belov\\PycharmProjects\\Sprint_6\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 232, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "steps": [{"name": "Кликнуть на элемент", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementNotInteractableException: Message: Element <button class=\"Button_Button__ra12g\"> could not be scrolled into view\nStacktrace:\nRemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nWebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:199:5\nElementNotInteractableError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:368:5\nwebdriverClickElement@chrome://remote/content/marionette/interaction.sys.mjs:167:11\ninteraction.clickElement@chrome://remote/content/marionette/interaction.sys.mjs:136:11\nclickElement@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:354:29\nreceiveMessage@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:230:31\n\n", "trace": "  File \"C:\\Users\\belov\\PycharmProjects\\Sprint_6\\.venv\\Lib\\site-packages\\allure_commons\\_allure.py\", line 202, in impl\n    return func(*a, **kw)\n  File \"C:\\Users\\belov\\PycharmProjects\\Sprint_6\\pages\\base_page.py\", line 23, in click_on_element\n    element.click()\n    ~~~~~~~~~~~~~^^\n  File \"C:\\Users\\belov\\PycharmProjects\\Sprint_6\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 119, in click\n    self._execute(Command.CLICK_ELEMENT)\n    ~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\belov\\PycharmProjects\\Sprint_6\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 572, in _execute\n    return self._parent.execute(command, params)\n           ~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\belov\\PycharmProjects\\Sprint_6\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 448, in execute\n    self.error_handler.check_response(response)\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^\n  File \"C:\\Users\\belov\\PycharmProjects\\Sprint_6\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 232, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "steps": [{"name": "Подождать видимости элемента", "status": "passed", "parameters": [{"name": "locator", "value": "('class name', 'Button_Button__ra12g')"}, {"name": "timeout", "value": "10"}], "start": 1747253760039, "stop": 1747253760044}], "parameters": [{"name": "locator", "value": "('class name', 'Button_Button__ra12g')"}, {"name": "timeout", "value": "10"}], "start": 1747253760039, "stop": 1747253760054}], "start": 1747253760039, "stop": 1747253760141}], "start": 1747253760039, "stop": 1747253760143, "uuid": "6ca854cb-e3ed-4825-a76c-afff94384167", "historyId": "1c652a41ff5888b6a36bc4958c2bd451", "testCaseId": "1c652a41ff5888b6a36bc4958c2bd451", "fullName": "tests.test_successful_order_window.TestSuccessfulOrderWindow#test_successful_order", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_successful_order_window"}, {"name": "subSuite", "value": "TestSuccessfulOrderWindow"}, {"name": "host", "value": "Eva"}, {"name": "thread", "value": "13400-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_successful_order_window"}]}